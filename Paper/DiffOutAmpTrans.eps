%!PS-Adobe-2.0 EPSF-2.0
%%Title: DiffOutAmpTrans.tex
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Wed Feb 27 18:54:00 2013
%%DocumentFonts: 
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (DiffOutAmpTrans.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (donny)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb 27 18:54:00 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1497 5098 M
44 0 V
3811 0 R
-44 0 V
1497 5205 M
44 0 V
3811 0 R
-44 0 V
stroke
LTa
1497 5312 M
3855 0 V
stroke
LTb
1497 5312 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
1497 5419 M
44 0 V
3811 0 R
-44 0 V
1497 5526 M
44 0 V
3811 0 R
-44 0 V
1497 5633 M
44 0 V
3811 0 R
-44 0 V
1497 5741 M
44 0 V
3811 0 R
-44 0 V
stroke
LTa
1497 5848 M
3855 0 V
stroke
LTb
1497 5848 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
1497 5955 M
44 0 V
3811 0 R
-44 0 V
1497 6062 M
44 0 V
3811 0 R
-44 0 V
1497 6169 M
44 0 V
3811 0 R
-44 0 V
1497 6276 M
44 0 V
3811 0 R
-44 0 V
stroke
LTa
1497 6384 M
3855 0 V
stroke
LTb
1497 6384 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
1497 6491 M
44 0 V
3811 0 R
-44 0 V
1497 6598 M
44 0 V
3811 0 R
-44 0 V
1497 6705 M
44 0 V
3811 0 R
-44 0 V
1497 6812 M
44 0 V
3811 0 R
-44 0 V
stroke
LTa
1497 6919 M
3855 0 V
stroke
LTb
1497 6919 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
1497 7027 M
44 0 V
3811 0 R
-44 0 V
1497 7134 M
44 0 V
3811 0 R
-44 0 V
1497 7241 M
44 0 V
3811 0 R
-44 0 V
1497 7348 M
44 0 V
3811 0 R
-44 0 V
stroke
LTa
1497 7455 M
3855 0 V
stroke
LTb
1497 7455 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
1497 7562 M
44 0 V
3811 0 R
-44 0 V
1497 7670 M
44 0 V
3811 0 R
-44 0 V
1497 7777 M
44 0 V
3811 0 R
-44 0 V
1497 7884 M
44 0 V
3811 0 R
-44 0 V
stroke
LTa
1497 7991 M
3855 0 V
stroke
LTb
1497 7991 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
0.500 UL
LTa
1497 5044 M
0 2947 V
stroke
LTb
1497 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
1626 5044 M
0 44 V
0 2903 R
0 -44 V
1754 5044 M
0 44 V
0 2903 R
0 -44 V
1882 5044 M
0 44 V
0 2903 R
0 -44 V
2011 5044 M
0 44 V
0 2903 R
0 -44 V
2140 5044 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
2140 5044 M
0 2947 V
stroke
LTb
2140 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
2268 5044 M
0 44 V
0 2903 R
0 -44 V
2397 5044 M
0 44 V
0 2903 R
0 -44 V
2525 5044 M
0 44 V
0 2903 R
0 -44 V
2653 5044 M
0 44 V
0 2903 R
0 -44 V
2782 5044 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
2782 5044 M
0 2947 V
stroke
LTb
2782 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
2911 5044 M
0 44 V
0 2903 R
0 -44 V
3039 5044 M
0 44 V
0 2903 R
0 -44 V
3168 5044 M
0 44 V
0 2903 R
0 -44 V
3296 5044 M
0 44 V
0 2903 R
0 -44 V
3424 5044 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
3425 5044 M
0 2947 V
stroke
LTb
3425 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
3553 5044 M
0 44 V
0 2903 R
0 -44 V
3682 5044 M
0 44 V
0 2903 R
0 -44 V
3810 5044 M
0 44 V
0 2903 R
0 -44 V
3939 5044 M
0 44 V
0 2903 R
0 -44 V
4067 5044 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
4067 5044 M
0 2947 V
stroke
LTb
4067 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
4196 5044 M
0 44 V
0 2903 R
0 -44 V
4324 5044 M
0 44 V
0 2903 R
0 -44 V
4453 5044 M
0 44 V
0 2903 R
0 -44 V
4581 5044 M
0 44 V
0 2903 R
0 -44 V
4710 5044 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
4710 5044 M
0 2947 V
stroke
LTb
4710 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
4838 5044 M
0 44 V
0 2903 R
0 -44 V
4967 5044 M
0 44 V
0 2903 R
0 -44 V
5095 5044 M
0 44 V
0 2903 R
0 -44 V
5223 5044 M
0 44 V
0 2903 R
0 -44 V
5352 5044 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
5352 5044 M
0 2947 V
stroke
LTb
5352 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
0.500 UL
LTb
1497 7991 N
0 -2947 V
3855 0 V
0 2947 V
-3855 0 V
Z stroke
0.00 0.00 0.00 C LTb
0.00 0.00 0.00 C LTb
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
0.00 0.00 1.00 C 1497 6651 M
1063 0 V
222 0 V
0 1 V
0 1 V
0 1 V
0 1 V
0 1 V
0 1 V
0 1 V
0 1 V
0 1 V
0 1 V
0 2 V
0 1 V
0 1 V
0 1 V
0 2 V
0 2 V
0 2 V
0 2 V
0 3 V
0 3 V
0 3 V
0 4 V
0 5 V
0 6 V
0 7 V
0 8 V
1 11 V
0 16 V
0 23 V
0 26 V
0 39 V
1 44 V
0 62 V
1 83 V
1 131 V
1 120 V
1 187 V
1 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 0 V
2 0 V
3 0 V
4 0 V
7 0 V
4 0 V
8 0 V
640 0 V
601 0 V
1 -21 V
0 -41 V
1 -74 V
0 -79 V
1 -80 V
1 -122 V
1 -154 V
2 -233 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
3 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
stroke 4123 6651 M
3 0 V
96 0 V
1130 0 V
1.000 UP
stroke
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
6570 5098 M
44 0 V
3810 0 R
-44 0 V
6570 5205 M
44 0 V
3810 0 R
-44 0 V
stroke
LTa
6570 5312 M
3854 0 V
stroke
LTb
6570 5312 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
6570 5419 M
44 0 V
3810 0 R
-44 0 V
6570 5526 M
44 0 V
3810 0 R
-44 0 V
6570 5633 M
44 0 V
3810 0 R
-44 0 V
6570 5741 M
44 0 V
3810 0 R
-44 0 V
stroke
LTa
6570 5848 M
3854 0 V
stroke
LTb
6570 5848 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
6570 5955 M
44 0 V
3810 0 R
-44 0 V
6570 6062 M
44 0 V
3810 0 R
-44 0 V
6570 6169 M
44 0 V
3810 0 R
-44 0 V
6570 6276 M
44 0 V
3810 0 R
-44 0 V
stroke
LTa
6570 6384 M
3854 0 V
stroke
LTb
6570 6384 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
6570 6491 M
44 0 V
3810 0 R
-44 0 V
6570 6598 M
44 0 V
3810 0 R
-44 0 V
6570 6705 M
44 0 V
3810 0 R
-44 0 V
6570 6812 M
44 0 V
3810 0 R
-44 0 V
stroke
LTa
6570 6919 M
3854 0 V
stroke
LTb
6570 6919 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
6570 7027 M
44 0 V
3810 0 R
-44 0 V
6570 7134 M
44 0 V
3810 0 R
-44 0 V
6570 7241 M
44 0 V
3810 0 R
-44 0 V
6570 7348 M
44 0 V
3810 0 R
-44 0 V
stroke
LTa
6570 7455 M
3854 0 V
stroke
LTb
6570 7455 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
6570 7562 M
44 0 V
3810 0 R
-44 0 V
6570 7670 M
44 0 V
3810 0 R
-44 0 V
6570 7777 M
44 0 V
3810 0 R
-44 0 V
6570 7884 M
44 0 V
3810 0 R
-44 0 V
stroke
LTa
6570 7991 M
3854 0 V
stroke
LTb
6570 7991 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
0.500 UL
LTa
6570 5044 M
0 2947 V
stroke
LTb
6570 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
6698 5044 M
0 44 V
0 2903 R
0 -44 V
6827 5044 M
0 44 V
0 2903 R
0 -44 V
6955 5044 M
0 44 V
0 2903 R
0 -44 V
7084 5044 M
0 44 V
0 2903 R
0 -44 V
7212 5044 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
7212 5044 M
0 2947 V
stroke
LTb
7212 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
7341 5044 M
0 44 V
0 2903 R
0 -44 V
7469 5044 M
0 44 V
0 2903 R
0 -44 V
7598 5044 M
0 44 V
0 2903 R
0 -44 V
7726 5044 M
0 44 V
0 2903 R
0 -44 V
7855 5044 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
7855 5044 M
0 2947 V
stroke
LTb
7855 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
7983 5044 M
0 44 V
0 2903 R
0 -44 V
8112 5044 M
0 44 V
0 2903 R
0 -44 V
8240 5044 M
0 44 V
0 2903 R
0 -44 V
8369 5044 M
0 44 V
0 2903 R
0 -44 V
8497 5044 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
8497 5044 M
0 2947 V
stroke
LTb
8497 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
8625 5044 M
0 44 V
0 2903 R
0 -44 V
8754 5044 M
0 44 V
0 2903 R
0 -44 V
8882 5044 M
0 44 V
0 2903 R
0 -44 V
9011 5044 M
0 44 V
0 2903 R
0 -44 V
9139 5044 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
9139 5044 M
0 2947 V
stroke
LTb
9139 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
9268 5044 M
0 44 V
0 2903 R
0 -44 V
9396 5044 M
0 44 V
0 2903 R
0 -44 V
9525 5044 M
0 44 V
0 2903 R
0 -44 V
9653 5044 M
0 44 V
0 2903 R
0 -44 V
9782 5044 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
9782 5044 M
0 2947 V
stroke
LTb
9782 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
9910 5044 M
0 44 V
0 2903 R
0 -44 V
129 -2903 R
0 44 V
0 2903 R
0 -44 V
128 -2903 R
0 44 V
0 2903 R
0 -44 V
129 -2903 R
0 44 V
0 2903 R
0 -44 V
128 -2903 R
0 44 V
0 2903 R
0 -44 V
stroke
LTa
10424 5044 M
0 2947 V
stroke
LTb
10424 5044 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
0.500 UL
LTb
6570 7991 N
0 -2947 V
3854 0 V
0 2947 V
-3854 0 V
Z stroke
0.00 0.00 0.00 C LTb
0.00 0.00 0.00 C LTb
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
0.00 0.00 1.00 C 6570 5312 M
1063 0 V
222 0 V
0 1 V
0 1 V
0 1 V
0 1 V
0 1 V
0 2 V
0 3 V
0 3 V
0 5 V
0 8 V
0 12 V
1 19 V
0 25 V
0 41 V
0 54 V
1 88 V
1 135 V
1 246 V
1 252 V
1 426 V
0 46 V
1 93 V
0 189 V
1 386 V
1 95 V
0 171 V
1 193 V
1 89 V
1 17 V
0 -28 V
1 -57 V
1 -87 V
1 -41 V
1 -12 V
1 7 V
1 13 V
1 11 V
1 6 V
2 -2 V
2 -2 V
3 0 V
3 0 V
8 0 V
4 0 V
7 0 V
640 0 V
602 0 V
0 -6 V
0 -20 V
1 -60 V
0 -89 V
1 -113 V
1 -207 V
1 -310 V
2 -517 V
0 -57 V
1 -116 V
0 -236 V
1 -279 V
1 -119 V
0 -116 V
0 -102 V
1 -100 V
0 -64 V
1 -51 V
0 -27 V
0 -12 V
1 -1 V
0 13 V
0 23 V
1 26 V
0 23 V
0 24 V
1 32 V
0 27 V
0 21 V
1 17 V
0 10 V
0 4 V
1 2 V
0 -2 V
0 -4 V
1 -6 V
0 -6 V
1 -5 V
0 -4 V
0 -3 V
1 -3 V
0 -1 V
1 -1 V
1 1 V
0 1 V
1 1 V
1 1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
stroke 9177 5312 M
1 0 V
1 0 V
3 0 V
1 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
97 0 V
1129 0 V
1.000 UP
stroke
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1497 992 M
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
stroke
LTa
1497 1161 M
3855 0 V
stroke
LTb
1497 1161 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
1497 1245 M
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
stroke
LTa
1497 1582 M
3855 0 V
stroke
LTb
1497 1582 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
1497 1666 M
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
stroke
LTa
1497 2003 M
3855 0 V
stroke
LTb
1497 2003 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
1497 2087 M
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
stroke
LTa
1497 2424 M
3855 0 V
stroke
LTb
1497 2424 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
1497 2508 M
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
stroke
LTa
1497 2845 M
3855 0 V
stroke
LTb
1497 2845 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
1497 2929 M
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
stroke
LTa
1497 3266 M
3855 0 V
stroke
LTb
1497 3266 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
1497 3350 M
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
stroke
LTa
1497 3687 M
3855 0 V
stroke
LTb
1497 3687 M
88 0 V
3767 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
1497 3771 M
44 0 V
3811 0 R
-44 0 V
-3811 84 R
44 0 V
3811 0 R
-44 0 V
stroke
LTa
1497 950 M
0 2947 V
stroke
LTb
1497 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
1626 950 M
0 44 V
0 2903 R
0 -44 V
1754 950 M
0 44 V
0 2903 R
0 -44 V
1882 950 M
0 44 V
0 2903 R
0 -44 V
2011 950 M
0 44 V
0 2903 R
0 -44 V
2140 950 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
2140 950 M
0 2947 V
stroke
LTb
2140 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
2268 950 M
0 44 V
0 2903 R
0 -44 V
2397 950 M
0 44 V
0 2903 R
0 -44 V
2525 950 M
0 44 V
0 2903 R
0 -44 V
2653 950 M
0 44 V
0 2903 R
0 -44 V
2782 950 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
2782 950 M
0 2947 V
stroke
LTb
2782 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
2911 950 M
0 44 V
0 2903 R
0 -44 V
3039 950 M
0 44 V
0 2903 R
0 -44 V
3168 950 M
0 44 V
0 2903 R
0 -44 V
3296 950 M
0 44 V
0 2903 R
0 -44 V
3424 950 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
3425 950 M
0 2947 V
stroke
LTb
3425 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
3553 950 M
0 44 V
0 2903 R
0 -44 V
3682 950 M
0 44 V
0 2903 R
0 -44 V
3810 950 M
0 44 V
0 2903 R
0 -44 V
3939 950 M
0 44 V
0 2903 R
0 -44 V
4067 950 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
4067 950 M
0 2947 V
stroke
LTb
4067 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
4196 950 M
0 44 V
0 2903 R
0 -44 V
4324 950 M
0 44 V
0 2903 R
0 -44 V
4453 950 M
0 44 V
0 2903 R
0 -44 V
4581 950 M
0 44 V
0 2903 R
0 -44 V
4710 950 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
4710 950 M
0 2947 V
stroke
LTb
4710 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
4838 950 M
0 44 V
0 2903 R
0 -44 V
4967 950 M
0 44 V
0 2903 R
0 -44 V
5095 950 M
0 44 V
0 2903 R
0 -44 V
5223 950 M
0 44 V
0 2903 R
0 -44 V
5352 950 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
5352 950 M
0 2947 V
stroke
LTb
5352 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
0.500 UL
LTb
1497 3897 N
0 -2947 V
3855 0 V
0 2947 V
-3855 0 V
Z stroke
0.00 0.00 0.00 C LTb
0.00 0.00 0.00 C LTb
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
0.00 0.00 1.00 C 1497 2424 M
1063 0 V
222 0 V
0 1 V
0 1 V
0 1 V
0 1 V
0 1 V
0 1 V
0 3 V
0 2 V
1 5 V
0 6 V
0 9 V
0 12 V
0 19 V
1 24 V
0 38 V
1 57 V
1 101 V
1 102 V
1 172 V
1 18 V
0 37 V
0 75 V
2 153 V
0 36 V
1 58 V
0 53 V
1 16 V
1 -5 V
1 -15 V
1 -18 V
1 -18 V
0 -7 V
1 0 V
1 2 V
1 3 V
1 2 V
1 2 V
2 -1 V
2 0 V
3 0 V
4 0 V
7 0 V
4 0 V
8 0 V
640 0 V
601 0 V
1 -4 V
0 -11 V
1 -30 V
0 -40 V
1 -49 V
1 -87 V
1 -126 V
2 -209 V
0 -23 V
0 -46 V
1 -94 V
1 -110 V
0 -46 V
1 -43 V
0 -33 V
1 -26 V
0 -14 V
0 -9 V
1 -4 V
0 3 V
1 9 V
0 11 V
1 10 V
0 7 V
0 6 V
0 6 V
1 5 V
0 3 V
0 2 V
1 1 V
0 1 V
1 -1 V
0 -1 V
1 -1 V
0 -2 V
0 -1 V
1 -1 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 1 V
1 0 V
1 0 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
0 1 V
1 0 V
1 0 V
3 -1 V
1 0 V
stroke 4111 2423 M
2 0 V
2 0 V
2 1 V
2 0 V
2 0 V
2 0 V
3 0 V
96 0 V
1130 0 V
1.000 UP
stroke
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
6570 992 M
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
stroke
LTa
6570 1161 M
3854 0 V
stroke
LTb
6570 1161 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
6570 1245 M
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
stroke
LTa
6570 1582 M
3854 0 V
stroke
LTb
6570 1582 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
6570 1666 M
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
stroke
LTa
6570 2003 M
3854 0 V
stroke
LTb
6570 2003 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
6570 2087 M
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
stroke
LTa
6570 2424 M
3854 0 V
stroke
LTb
6570 2424 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
6570 2508 M
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
stroke
LTa
6570 2845 M
3854 0 V
stroke
LTb
6570 2845 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
6570 2929 M
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
stroke
LTa
6570 3266 M
3854 0 V
stroke
LTb
6570 3266 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
6570 3350 M
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
stroke
LTa
6570 3687 M
3854 0 V
stroke
LTb
6570 3687 M
88 0 V
3766 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
6570 3771 M
44 0 V
3810 0 R
-44 0 V
-3810 84 R
44 0 V
3810 0 R
-44 0 V
stroke
LTa
6570 950 M
0 2947 V
stroke
LTb
6570 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
6698 950 M
0 44 V
0 2903 R
0 -44 V
6827 950 M
0 44 V
0 2903 R
0 -44 V
6955 950 M
0 44 V
0 2903 R
0 -44 V
7084 950 M
0 44 V
0 2903 R
0 -44 V
7212 950 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
7212 950 M
0 2947 V
stroke
LTb
7212 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
7341 950 M
0 44 V
0 2903 R
0 -44 V
7469 950 M
0 44 V
0 2903 R
0 -44 V
7598 950 M
0 44 V
0 2903 R
0 -44 V
7726 950 M
0 44 V
0 2903 R
0 -44 V
7855 950 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
7855 950 M
0 2947 V
stroke
LTb
7855 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
7983 950 M
0 44 V
0 2903 R
0 -44 V
8112 950 M
0 44 V
0 2903 R
0 -44 V
8240 950 M
0 44 V
0 2903 R
0 -44 V
8369 950 M
0 44 V
0 2903 R
0 -44 V
8497 950 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
8497 950 M
0 2947 V
stroke
LTb
8497 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
8625 950 M
0 44 V
0 2903 R
0 -44 V
8754 950 M
0 44 V
0 2903 R
0 -44 V
8882 950 M
0 44 V
0 2903 R
0 -44 V
9011 950 M
0 44 V
0 2903 R
0 -44 V
9139 950 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
9139 950 M
0 2947 V
stroke
LTb
9139 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
9268 950 M
0 44 V
0 2903 R
0 -44 V
9396 950 M
0 44 V
0 2903 R
0 -44 V
9525 950 M
0 44 V
0 2903 R
0 -44 V
9653 950 M
0 44 V
0 2903 R
0 -44 V
9782 950 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
9782 950 M
0 2947 V
stroke
LTb
9782 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
9910 950 M
0 44 V
0 2903 R
0 -44 V
10039 950 M
0 44 V
0 2903 R
0 -44 V
10167 950 M
0 44 V
0 2903 R
0 -44 V
10296 950 M
0 44 V
0 2903 R
0 -44 V
10424 950 M
0 44 V
0 2903 R
0 -44 V
stroke
LTa
10424 950 M
0 2947 V
stroke
LTb
10424 950 M
0 88 V
0 2859 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
0.500 UL
LTb
6570 3897 N
0 -2947 V
3854 0 V
0 2947 V
-3854 0 V
Z stroke
0.00 0.00 0.00 C LTb
0.00 0.00 0.00 C LTb
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
0.00 0.00 1.00 C 6570 2423 M
1063 0 V
222 0 V
0 1 V
0 -1 V
0 -1 V
0 -1 V
0 -2 V
0 -3 V
1 -5 V
0 -8 V
0 -14 V
0 -19 V
1 -31 V
1 -49 V
1 -92 V
1 -95 V
1 -164 V
0 -18 V
1 -36 V
0 -73 V
1 -151 V
1 -39 V
0 -76 V
1 -98 V
1 -54 V
1 -18 V
0 7 V
1 27 V
1 49 V
1 26 V
1 9 V
1 -3 V
1 -7 V
1 -6 V
1 -4 V
2 1 V
2 1 V
3 1 V
3 -1 V
8 0 V
4 0 V
7 0 V
640 0 V
602 0 V
0 1 V
0 5 V
1 18 V
0 29 V
1 40 V
1 76 V
1 117 V
2 197 V
0 23 V
1 45 V
0 91 V
1 109 V
1 47 V
0 49 V
0 47 V
1 52 V
0 37 V
1 30 V
0 18 V
0 10 V
1 4 V
0 -1 V
0 -8 V
1 -11 V
0 -11 V
0 -13 V
1 -19 V
0 -16 V
0 -14 V
1 -11 V
0 -6 V
0 -3 V
1 -1 V
0 2 V
1 4 V
0 3 V
1 3 V
0 2 V
0 2 V
1 1 V
0 1 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
0 1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
3 1 V
1 0 V
stroke 9183 2424 M
2 0 V
2 0 V
3 -1 V
2 0 V
2 0 V
2 0 V
2 0 V
97 0 V
1129 0 V
1.000 UP
stroke
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
